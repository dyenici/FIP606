{
  "hash": "12df272c16e084c019f24b55a5bca364",
  "result": {
    "markdown": "---\ntitle: \"Anova I fator, Teste de Normalidade e Homocedasticidade, Teste não-paramétrico\"\nformat: html\n---\n\n\n## Anova I fator\nA Análise de Variância, ou ANOVA, é uma análise estatística para determinar a contribuição de diferentes fatores na variância total de um experimento.\n\nA análise de variância de I fator, ou ANOVA simples, é uniletaral. Adequada para experimentos com apenas uma variável independente com dois ou mais níveis.\n\nNessa etapa de aprendizagem, começamos a trabalhar algo que chamaremos de **Análise Exploratória**. Antes de determinar qualquer análise estatística no trabalho, é importante trabalhar uma análise visual. Essa análise já permite que algumas conclusões sejam feitas e que o caminho mais adequado seja escolhido. A análise exploratória permite quem está trabalhando os dados perceber se existe algum padrão de distribuição nos dados, se essa distribuição é, visualmente, normal, se os dados se agrupam de alguma forma, etc.\n\nEntão, o primeiro passo agora, é explodar os dados.\n\n\n::: {.cell hash='Aula-10_cache/html/unnamed-chunk-1_c9ad9dbcc8be4099034e73d84c636e15'}\n\n```{.r .cell-code}\nlibrary (readxl)\nlibrary (tidyverse)\n\nmicelial <- read_excel(\"dados-diversos.xlsx\", \"micelial\")\n\nmicelial |> \n  ggplot(aes(especie, tcm))+\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](Aula-10_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\nFeita essa análise visual, seja com boxplot, histogramas, colunas, dispersão... partimos para aplicação da Anova I fator.\n\n\n::: {.cell hash='Aula-10_cache/html/unnamed-chunk-2_705d25530e95c1705a64ca9e7c00e239'}\n\n```{.r .cell-code}\naov1 <- aov(tcm ~ especie, data = micelial)\nsummary (aov1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            Df Sum Sq Mean Sq F value Pr(>F)\nespecie      4 0.4692 0.11729   1.983  0.117\nResiduals   37 2.1885 0.05915               \n```\n:::\n:::\n\n\n## Testes de Normalidade e Homocedasticidade\n\n### Teste de Normalidade\nA suposição de normalidade dos dados amostrais é uma condição exigida para a realização de muitas inferências válidas a respeito de parâmetros populacionais. Vários dos diferentes métodos de estimação e testes de hipóteses existentes foram formulados sob a suposição de que a amostra aleatória tenha sido extraída de uma população gaussiana.\n\n### Teste de Homocedasticidade\nEm análise de variância(ANOVA), há um pressuposto que deve ser atendido que é de os erros terem variância comum, ou seja, homocedasticidade. Isso implica que cada tratamento que se está sendo comparado pelo teste F, deve ter aproximadamente a mesma variância para que a ANOVA tenha validade. Quando este pressuposto não é atendido dizemos que as variâncias não são homogêneas, ou ainda, que existe heterocedasticidade.\n\n\n::: {.cell hash='Aula-10_cache/html/unnamed-chunk-3_c7ed1ba34a2997a1bec07e485cf584bd'}\n\n```{.r .cell-code}\n#Checando as premissas\n\nlibrary (performance)\n\ncheck_heteroscedasticity(aov1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOK: Error variance appears to be homoscedastic (p = 0.175).\n```\n:::\n\n```{.r .cell-code}\ncheck_normality(aov1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOK: residuals appear as normally distributed (p = 0.074).\n```\n:::\n\n```{.r .cell-code}\n#Testes de Normalidade\n\nhist(aov1$residuals) \n```\n\n::: {.cell-output-display}\n![](Aula-10_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#Permite ver a curva de distribuição dos dados, confirmando o que se tem nos testes anteriores - distribuição normal.\n\nshapiro.test(aov1$residuals)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tShapiro-Wilk normality test\n\ndata:  aov1$residuals\nW = 0.95101, p-value = 0.07022\n```\n:::\n:::\n\n\nOutra forma de verificar se uma amostra segue a distribuição gaussiana é através dos gráficos de envelope normal de probabilidade e seu envelope com intervalo de confiança simulado.\n\nPodemos fazer usando as funções \"qqnorm()\" e \"qqline\" sem o envelope:\n\n\n::: {.cell hash='Aula-10_cache/html/unnamed-chunk-4_fff7dc464d1eecfee4723667a31c1a0e'}\n\n```{.r .cell-code}\nqqnorm(aov1$residuals)\nqqline(aov1$residuals)\n```\n\n::: {.cell-output-display}\n![](Aula-10_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nOu com o envelope simulado com o pacote \"DHARMa\" e a função \"plot()\":\n\n\n::: {.cell hash='Aula-10_cache/html/unnamed-chunk-5_c14f82dd6f144a8491d7b3a8482e3c44'}\n\n```{.r .cell-code}\nlibrary (DHARMa)\nplot(simulateResiduals(aov1))\n```\n\n::: {.cell-output-display}\n![](Aula-10_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nÉ possível ainda encontrar casos como o exemplo abaixo:\n\n\n::: {.cell hash='Aula-10_cache/html/unnamed-chunk-6_bc26ce65f440679c6f6b5af9c70dd8e2'}\n\n```{.r .cell-code}\nInsectSprays\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   count spray\n1     10     A\n2      7     A\n3     20     A\n4     14     A\n5     14     A\n6     12     A\n7     10     A\n8     23     A\n9     17     A\n10    20     A\n11    14     A\n12    13     A\n13    11     B\n14    17     B\n15    21     B\n16    11     B\n17    16     B\n18    14     B\n19    17     B\n20    17     B\n21    19     B\n22    21     B\n23     7     B\n24    13     B\n25     0     C\n26     1     C\n27     7     C\n28     2     C\n29     3     C\n30     1     C\n31     2     C\n32     1     C\n33     3     C\n34     0     C\n35     1     C\n36     4     C\n37     3     D\n38     5     D\n39    12     D\n40     6     D\n41     4     D\n42     3     D\n43     5     D\n44     5     D\n45     5     D\n46     5     D\n47     2     D\n48     4     D\n49     3     E\n50     5     E\n51     3     E\n52     5     E\n53     3     E\n54     6     E\n55     1     E\n56     1     E\n57     3     E\n58     2     E\n59     6     E\n60     4     E\n61    11     F\n62     9     F\n63    15     F\n64    22     F\n65    15     F\n66    16     F\n67    13     F\n68    10     F\n69    26     F\n70    26     F\n71    24     F\n72    13     F\n```\n:::\n\n```{.r .cell-code}\ninsects <- as_tibble(InsectSprays) |> \n  select (spray, count)\n\ninsects |> \n  ggplot(aes(spray, count))+\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](Aula-10_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nApós a análise exploratória, é possível perceber que os dados apresentam uma distribuição um pouco diferente. Partimos para a aplicação de ANOVA e checar as premissas.\n\n\n::: {.cell hash='Aula-10_cache/html/unnamed-chunk-7_51d9a01cf0a124c23c8e61e04378ee4a'}\n\n```{.r .cell-code}\naov2 <- aov(count ~ spray, data = insects)\nsummary (aov2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            Df Sum Sq Mean Sq F value Pr(>F)    \nspray        5   2669   533.8    34.7 <2e-16 ***\nResiduals   66   1015    15.4                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n\n```{.r .cell-code}\ncheck_heteroscedasticity(aov2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nWarning: Heteroscedasticity (non-constant error variance) detected (p < .001).\n```\n:::\n\n```{.r .cell-code}\ncheck_normality(aov2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nWarning: Non-normality of residuals detected (p = 0.022).\n```\n:::\n:::\n\n\nFeito isso, vemos que os dados não apresentam distruibuição normal e são heterocedasticos. Uma das alternativas que temos para trabalhar esse conjunto é a transformação. Nesse caso, usaremos a transformação em raiz (sqrt), mas o R tem uma série de transformações possíveis. As transformações são feitas por tentativa e erro, até que uma delas atenda o que você precisa.\n\n\n::: {.cell hash='Aula-10_cache/html/unnamed-chunk-8_0b42c3bf8cdb6866d48280f9c3b82861'}\n\n```{.r .cell-code}\naov3 <- aov(sqrt(count) ~ spray, data = insects)\nsummary (aov3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            Df Sum Sq Mean Sq F value Pr(>F)    \nspray        5  88.44  17.688    44.8 <2e-16 ***\nResiduals   66  26.06   0.395                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n\n```{.r .cell-code}\ncheck_heteroscedasticity(aov3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOK: Error variance appears to be homoscedastic (p = 0.854).\n```\n:::\n\n```{.r .cell-code}\ncheck_normality(aov3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOK: residuals appear as normally distributed (p = 0.681).\n```\n:::\n\n```{.r .cell-code}\n#Os dados transformados por raiz são normais e homocedaticos.\n\n#Testes de Normalidade\n\nhist(aov3$residuals)\n```\n\n::: {.cell-output-display}\n![](Aula-10_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n\n```{.r .cell-code}\nshapiro.test(aov3$residuals)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tShapiro-Wilk normality test\n\ndata:  aov3$residuals\nW = 0.98721, p-value = 0.6814\n```\n:::\n\n```{.r .cell-code}\n#Gráficos para distribuição gaussiana\nqqnorm(aov3$residuals)\nqqline(aov3$residuals)\n```\n\n::: {.cell-output-display}\n![](Aula-10_files/figure-html/unnamed-chunk-8-2.png){width=672}\n:::\n:::\n\n\n### Pacote \"emmeans\"\nCalcular médias marginais estimadas (EMMs) para fatores específicos ou combinações de fatores em um modelo linear; e opcionalmente, comparações ou contrastes entre eles. EMMs também são conhecidos como médias de mínimos quadrados.\n\n\n::: {.cell hash='Aula-10_cache/html/unnamed-chunk-9_0adc46347ca031c73416db8be63d8a25'}\n\n```{.r .cell-code}\nlibrary (emmeans)\n\naov3_means <- emmeans(aov3, ~ spray,\n                       type = \"response\")\naov3_means\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n spray response    SE df lower.CL upper.CL\n A        14.14 1.364 66   11.550    17.00\n B        15.03 1.406 66   12.352    17.97\n C         1.55 0.452 66    0.779     2.58\n D         4.68 0.785 66    3.248     6.38\n E         3.27 0.656 66    2.095     4.72\n F        16.15 1.458 66   13.370    19.19\n\nConfidence level used: 0.95 \nIntervals are back-transformed from the sqrt scale \n```\n:::\n\n```{.r .cell-code}\npwpm(aov3_means)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        A       B       C       D       E       F\nA [14.14]  0.9975  <.0001  <.0001  <.0001  0.9145\nB  -0.116 [15.03]  <.0001  <.0001  <.0001  0.9936\nC   2.516   2.632 [ 1.55]  0.0081  0.2513  <.0001\nD   1.596   1.712  -0.919 [ 4.68]  0.7366  <.0001\nE   1.951   2.067  -0.565   0.355 [ 3.27]  <.0001\nF  -0.258  -0.142  -2.774  -1.854  -2.209 [16.15]\n\nRow and column labels: spray\nUpper triangle: P values   adjust = \"tukey\"\nDiagonal: [Estimates] (response)   type = \"response\"\nLower triangle: Comparisons (estimate)   earlier vs. later\n```\n:::\n:::\n\n\n### Pacote \"multcomp\" \nTestes simultâneos e intervalos de confiança para hipóteses lineares gerais em modelos paramétricos, incluindo efeitos lineares, lineares generalizados, lineares mistos e modelos de sobrevivência.\n\n### Pacote \"multcompView\"\nConverta um vetor lógico ou um vetor de valores-p ou uma matriz de correlação, diferença ou distância em uma exibição identificando os pares para os quais as diferenças não foram significativamente diferentes.\n\n### cld\nExtrai e exibe informações sobre todas as comparações pareadas de médias de mínimos quadrados.\n\n\n::: {.cell hash='Aula-10_cache/html/unnamed-chunk-10_52e6ef7492f9ad531b646e396624e0d7'}\n\n```{.r .cell-code}\nlibrary (multcomp)\nlibrary (multcompView)\ncld(aov3_means)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n spray response    SE df lower.CL upper.CL .group\n C         1.55 0.452 66    0.779     2.58  1    \n E         3.27 0.656 66    2.095     4.72  12   \n D         4.68 0.785 66    3.248     6.38   2   \n A        14.14 1.364 66   11.550    17.00    3  \n B        15.03 1.406 66   12.352    17.97    3  \n F        16.15 1.458 66   13.370    19.19    3  \n\nConfidence level used: 0.95 \nIntervals are back-transformed from the sqrt scale \nNote: contrasts are still on the sqrt scale \nP value adjustment: tukey method for comparing a family of 6 estimates \nsignificance level used: alpha = 0.05 \nNOTE: If two or more means share the same grouping symbol,\n      then we cannot show them to be different.\n      But we also did not show them to be the same. \n```\n:::\n:::\n\n\n## Teste Não Paramétrico\nOs testes não paramétricos, também conhecidos como testes de distribuição gratuita, são aqueles baseados em certas hipóteses, mas que não possuem uma organização normal. Geralmente, contêm resultados estatísticos provenientes de suas ordenações, o que os torna mais fáceis de entender.\n\n### Teste de Kruskal-Wallis\nO teste de Kruskal-Wallis é utilizado em situações onde queremos comparar mais de dois grupos independentes, de tamanhos iguais ou não, com variável resposta quantitativa. O teste é uma alternativa quando os pressupostos necesários pelo teste F da Análise de Variância não são atendidos, tendo em vista que o teste de Kruskal-Wallis dispensa a pressuposição de normalidade e homocedasticidade.\n\n\n::: {.cell hash='Aula-10_cache/html/unnamed-chunk-11_c3225c50aa557da01f814c4d0fc54940'}\n\n```{.r .cell-code}\nkruskal.test(count ~spray, data = insects)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tKruskal-Wallis rank sum test\n\ndata:  count by spray\nKruskal-Wallis chi-squared = 54.691, df = 5, p-value = 1.511e-10\n```\n:::\n\n```{.r .cell-code}\nlibrary (agricolae)\n\nkruskal(insects$count, insects$spray,\n        console = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nStudy: insects$count ~ insects$spray\nKruskal-Wallis test's\nTies or no Ties\n\nCritical Value: 54.69134\nDegrees of freedom: 5\nPvalue Chisq  : 1.510845e-10 \n\ninsects$spray,  means of the ranks\n\n  insects.count  r\nA      52.16667 12\nB      54.83333 12\nC      11.45833 12\nD      25.58333 12\nE      19.33333 12\nF      55.62500 12\n\nPost Hoc Analysis\n\nt-Student: 1.996564\nAlpha    : 0.05\nMinimum Significant Difference: 8.462804 \n\nTreatments with the same letter are not significantly different.\n\n  insects$count groups\nF      55.62500      a\nB      54.83333      a\nA      52.16667      a\nD      25.58333      b\nE      19.33333     bc\nC      11.45833      c\n```\n:::\n:::\n\n\n### glm\nUsado para ajustar modelos lineares generalizados, especificados por meio de uma descrição simbólica do preditor linear e uma descrição da distribuição de erro.\n\n### Família\nOs objetos de família fornecem uma maneira conveniente de especificar os detalhes dos modelos usados por funções como \"glm\".\n\n\n::: {.cell hash='Aula-10_cache/html/unnamed-chunk-12_6293268048a27d4467bfcd77943e8035'}\n\n```{.r .cell-code}\nglm1 <- glm(count ~ spray,\n            data = insects,\n            family = poisson(link = \"identity\"))\n```\n:::\n\n\nVisualização gráfica e comparação de médias.\n\n\n::: {.cell hash='Aula-10_cache/html/unnamed-chunk-13_34a2dee953204fd13a5a115ff87ae457'}\n\n```{.r .cell-code}\nlibrary (DHARMa)\nplot(simulateResiduals(glm1))\n```\n\n::: {.cell-output-display}\n![](Aula-10_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n\n```{.r .cell-code}\nsummary(glm1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nglm(formula = count ~ spray, family = poisson(link = \"identity\"), \n    data = insects)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-2.3852  -0.8876  -0.1482   0.6063   2.6922  \n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)  14.5000     1.0992  13.191  < 2e-16 ***\nsprayB        0.8333     1.5767   0.529    0.597    \nsprayC      -12.4167     1.1756 -10.562  < 2e-16 ***\nsprayD       -9.5833     1.2720  -7.534 4.92e-14 ***\nsprayE      -11.0000     1.2247  -8.981  < 2e-16 ***\nsprayF        2.1667     1.6116   1.344    0.179    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 409.041  on 71  degrees of freedom\nResidual deviance:  98.329  on 66  degrees of freedom\nAIC: 376.59\n\nNumber of Fisher Scoring iterations: 3\n```\n:::\n\n```{.r .cell-code}\nglml_means <- emmeans(glm1, ~ spray)\ncld(glml_means)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n spray emmean    SE  df asymp.LCL asymp.UCL .group\n C       2.08 0.417 Inf      1.27      2.90  1    \n E       3.50 0.540 Inf      2.44      4.56  12   \n D       4.92 0.640 Inf      3.66      6.17   2   \n A      14.50 1.099 Inf     12.35     16.65    3  \n B      15.33 1.130 Inf     13.12     17.55    3  \n F      16.67 1.179 Inf     14.36     18.98    3  \n\nConfidence level used: 0.95 \nP value adjustment: tukey method for comparing a family of 6 estimates \nsignificance level used: alpha = 0.05 \nNOTE: If two or more means share the same grouping symbol,\n      then we cannot show them to be different.\n      But we also did not show them to be the same. \n```\n:::\n:::\n\n\n## Transformação BoxCox\nA transformação Box-Cox é uma transformação de poder que elimina a não linearidade entre variáveis, variâncias diferentes e assimetria variável. A função boxcox do pacote MASS em R pode ser usada para estimar o parâmetro de transformação usando estimativa de máxima verossimilhança. Também receberemos o intervalo de confiança de 95% do parâmetro dessa função.Você deve calcular um modelo linear com a função lm e passá-lo para a função boxcox para determinar o “lambda” apropriado. \n\n\n\n::: {.cell hash='Aula-10_cache/html/unnamed-chunk-14_5d75df514f90c9db57fdd95b5e19b092'}\n\n```{.r .cell-code}\nlibrary (MASS)\ninsects\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 72 × 2\n   spray count\n   <fct> <dbl>\n 1 A        10\n 2 A         7\n 3 A        20\n 4 A        14\n 5 A        14\n 6 A        12\n 7 A        10\n 8 A        23\n 9 A        17\n10 A        20\n# ℹ 62 more rows\n```\n:::\n\n```{.r .cell-code}\nb <- boxcox (lm(insects$count+0.1 ~ 1))\n```\n\n::: {.cell-output-display}\n![](Aula-10_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n\n```{.r .cell-code}\nlambda <- b$x[which.max(b$y)]\nlambda\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.4242424\n```\n:::\n\n```{.r .cell-code}\n#A linha vertical tracejada no meio representa o parâmetro estimado lambda hat.\n\ninsects$count2 <- (insects$count ^ lambda - 1) / lambda\ninsects$count\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] 10  7 20 14 14 12 10 23 17 20 14 13 11 17 21 11 16 14 17 17 19 21  7 13  0\n[26]  1  7  2  3  1  2  1  3  0  1  4  3  5 12  6  4  3  5  5  5  5  2  4  3  5\n[51]  3  5  3  6  1  1  3  2  6  4 11  9 15 22 15 16 13 10 26 26 24 13\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}